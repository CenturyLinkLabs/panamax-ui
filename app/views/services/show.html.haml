- content_for(:body_id, 'manage_flow')

= render '/shared/breadcrumbs', breadcrumbs: ["Manage",
                                              link_to("Dashboard", dashboard_index_path),
                                              link_to("Applications", apps_path),
                                              link_to(@app.name, app_path(@app.to_param)),
                                              @service.name]

%section.service-details
  %span.service-status{ class: @service.status,
      data: { source: app_service_path(@app.id, @service.id, format: :json) } }
    %span.panamax-state= @service.status.to_s.humanize
    .tooltip
      %ul
        %li
          Sub State:
          %span.sub-state= @service.sub_state
        %li
          Active State:
          %span.active-state= @service.active_state
        %li
          Load State:
          %span.load-state= @service.load_state

  .base-image-detail
    .image-details
      %h6 Base Image:
      %span#image-name
        = @service.base_image_name
      %h6 Tag:
      %span
        = @service.image_tag_name
      = link_to 'View on Docker Hub', @service.docker_index_url, { class: 'docker-link', target: 'blank', data: { 'tracking-method' => 'click', 'tracking-action' => 'View on Docker Hub', 'tracking-category' => 'Outbound Link', 'tracking-label' => @service.docker_index_url }}
    .documentation
      = link_to('Documentation', '#', { class: 'instructions-dialog', data: {'doc-url'=> documentation_app_path(@app.id)} })  if @app.documentation_to_html.present?

  = form_for [@app, @service], html: { class: 'service-edit-form' } do |f|
    = render 'shared/errors', errors: f.object.errors
    .service-attributes
      .column-left
        .service-links
          = render 'service_links', f: f, services: @app.services, service_id: @service.id
        .port-detail
          %h3
            Ports
            .service-help-icon
              .context-help
                %section.tooltip
                  %aside.arrow
                  %span{ class: 'dismiss' }
                  %p Panamax currently supports port binding (-p) and port expose (--expose).
                  %p To see if any additional ports were exposed via the EXPOSE command at run time review the Dockerfile of any base image.
          .port-detail-forms
            = render 'port_bindings', f: f
            = render 'exposed_ports', f: f
      .column-right
        .environment-variables
          = render 'environment_variables', f: f
        .volumes
          = render 'volumes', f: f, services: @app.services, service_id: @service.id
        .docker-run-command
          %h3 Docker run command
          = f.text_field :command, placeholder: 'enter run command here (optional)'
    %p#docker-string
    = f.submit 'Save all changes', class: 'button-positive', data: {disable_with: 'Saving...'}

= render 'shared/journal',
  title: 'CoreOS Journal - Service Activity Log',
  journal_path: journal_app_service_path(@app.id, @service.id, format: :json)

#post-run-html
  = @app.documentation_to_html.html_safe if @app.documentation.present?
